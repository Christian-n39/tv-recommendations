[{"/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/index.js":"1","/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/App.jsx":"2","/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/pages/Home.jsx":"3","/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/pages/SingleShow.jsx":"4","/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/components/SearchInput.jsx":"5","/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/hooks/useFilteredChunks.js":"6","/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/components/GenresNav.jsx":"7","/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/containers/ShowsGrid.jsx":"8","/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/components/Show.jsx":"9","/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/containers/SearchResults.jsx":"10","/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/hooks/useSingleShow.js":"11"},{"size":165,"mtime":1609291655940,"results":"12","hashOfConfig":"13"},{"size":444,"mtime":1609361065990,"results":"14","hashOfConfig":"13"},{"size":1703,"mtime":1609627990610,"results":"15","hashOfConfig":"13"},{"size":1549,"mtime":1609380706416,"results":"16","hashOfConfig":"13"},{"size":324,"mtime":1609379456886,"results":"17","hashOfConfig":"13"},{"size":1676,"mtime":1609628041500,"results":"18","hashOfConfig":"13"},{"size":1039,"mtime":1609628176090,"results":"19","hashOfConfig":"13"},{"size":492,"mtime":1609379456886,"results":"20","hashOfConfig":"13"},{"size":611,"mtime":1609379456886,"results":"21","hashOfConfig":"13"},{"size":566,"mtime":1609379456886,"results":"22","hashOfConfig":"13"},{"size":339,"mtime":1609390431350,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1prqpqh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/index.js",[],["49","50"],"/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/App.jsx",[],"/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/pages/Home.jsx",["51","52"],"import React, { useEffect, useState } from 'react'\nimport useFilteredChinks from '../hooks/useFilteredChunks'\n\nimport SearchInput from '../components/SearchInput'\nimport GenresNav from '../components/GenresNav'\nimport SearchResults from '../containers/SearchResults'\nimport ShowsGrid from '../containers/ShowsGrid'\nimport '../styles/pages/home.css'\n\nfunction Home() {\n  const [genre, setGenre] = useState('Comedy')\n  const { filteredChunk, fetchChunk, genres, shows } = useFilteredChinks(genre)\n  const [chunk, setChunk] = useState(5)\n  const [search, setSearch] = useState('')\n\n  // if genre changes reset the chunk\n  useEffect(() => {\n    setChunk(prevChunk => (\n      prevChunk === chunk ? 5 : chunk\n    ))\n  }, [genre])\n  // then update filteredChunk\n  useEffect(() => {\n    fetchChunk(0, chunk)\n  }, [chunk, genre])\n\n  const selectGenre = (value) => {\n    setGenre(value)\n  }\n  const handleSearch= (value) => {\n    setSearch(value)\n  }\n  return (\n    <section className=\"Home\">\n      <section className=\"Navigation\">\n        <SearchInput handleSearch={handleSearch} />\n        <GenresNav genres={genres} currentGenre={genre} selectGenre={selectGenre} />\n      </section>\n      <section className=\"ShowsSection\" >\n        {\n          search.length > 3 &&\n          <>\n            <p className=\"SectionTitle\">Search results...</p>\n            <hr/>\n            <SearchResults shows={shows} search={search} />\n          </>\n        }\n        <p className=\"SectionTitle\" >Shows</p>\n        <hr/>\n        <ShowsGrid shows={filteredChunk} />\n        <button className=\"ShowsSection-button\" onClick={() => setChunk(chunk + 5)}>Show More</button>\n      </section>\n    </section>\n  )\n}\n\nexport default Home\n","/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/pages/SingleShow.jsx",["53","54"],"import React, { useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport useSingleShow from '../hooks/useSingleShow'\nimport '../styles/pages/singleShow.css'\n\nfunction SingleShow() {\n  const { id } = useParams()\n  const { show, fetchSingleShow } = useSingleShow()\n\n  useEffect(() => {\n    fetchSingleShow(id)\n  }, [])\n  return (\n    <div className=\"SingleShow\" >\n      <article className=\"SingleShow-badge\" >\n        {\n          Object.keys(show).length ?\n          <>\n            <figure>\n              <img className=\"SingleShow-image\" src={show.image.original} width='210' alt=\"image\"/>\n            </figure>\n            <div className=\"SingleShow-description\">\n              <h1>{show.name}</h1>\n                {\n                <div className=\"SingleShow-description-extra\">\n                    <p className=\"label\">Status</p>\n                    <span>{show.status}</span>\n                    <p className=\"label\">Genres</p>\n                    {\n                      <div className=\"Genres\">\n                        {show.genres.map(genre => (\n                          <span key={genre}>{genre}</span>\n                        ))}\n                      </div>\n                    }\n                </div>\n              }\n              <div className=\"Description\" dangerouslySetInnerHTML={{__html: show.summary}} />\n            </div>\n          </>\n          : <p>Loading</p>\n        }\n      </article>\n      <Link to='/' className=\"Link\" >\n        Go Back\n      </Link>\n    </div>\n  )\n}\n\nexport default SingleShow\n","/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/components/SearchInput.jsx",[],"/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/hooks/useFilteredChunks.js",[],"/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/components/GenresNav.jsx",[],"/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/containers/ShowsGrid.jsx",[],"/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/components/Show.jsx",[],"/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/containers/SearchResults.jsx",[],"/home/christian_n39/Dev/DesarrolloWeb/sandbox/prueba/src/hooks/useSingleShow.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":21,"column":6,"nodeType":"61","endLine":21,"endColumn":13,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":25,"column":6,"nodeType":"61","endLine":25,"endColumn":20,"suggestions":"64"},{"ruleId":"59","severity":1,"message":"65","line":12,"column":6,"nodeType":"61","endLine":12,"endColumn":8,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":20,"column":15,"nodeType":"69","endLine":20,"endColumn":100},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chunk'. Either include it or remove the dependency array. You can also do a functional update 'setChunk(c => ...)' if you only need 'chunk' in the 'setChunk' call.","ArrayExpression",["72"],"React Hook useEffect has a missing dependency: 'fetchChunk'. Either include it or remove the dependency array.",["73"],"React Hook useEffect has missing dependencies: 'fetchSingleShow' and 'id'. Either include them or remove the dependency array.",["74"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [chunk, genre]",{"range":"81","text":"82"},"Update the dependencies array to be: [chunk, fetchChunk, genre]",{"range":"83","text":"84"},"Update the dependencies array to be: [fetchSingleShow, id]",{"range":"85","text":"86"},[715,722],"[chunk, genre]",[805,819],"[chunk, fetchChunk, genre]",[339,341],"[fetchSingleShow, id]"]